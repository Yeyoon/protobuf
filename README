
Protobuf is a Common Lisp implementation of Google's protocol buffers.

This directory contains a preliminary release of the support functions
needed to serialize protocol buffers.  Not all features are currently
implemented.  The code works well enough that simple serialization tests
pass.

The code has been tested with ABCL, CCL, CLISP, and SBCL.  In the past it
has also worked with Allegro Common Lisp, but I have not tested it recently.

This git repository requires another git repository called google-protobuf,
which contains Google's protocol buffer compiler, modified to generate
Common Lisp code.  The google-protobuf repository is pulled in using git's
submodule feature.


INSTALLATION
============

1. Clone the protobuf git repository and google-protobuf git repository that
it pulls in as a submodule dependency:

    git clone git://github.com/brown/protobuf.git
    cd protobuf
    git submodule init
    git submodule update


2. Compile Google's C++ protocol buffer compiler, which can translate
protocol buffer definition files into Common Lisp code:

    cd google-protobuf
    ./autogen.sh
    ./configure
    make


3. Download and install the Common Lisp packages that protobuf depends on:

    ASDF
    trivial-utf-8       not needed for Allegro, CLisp, and SBCL

Note that some Common Lisp implementations, such as SBCL, already contain a
copy of the ASDF library.


4. Make protobuf.asd available to ASDF.  Either create a symbolic link to
protobuf.asd in your ASDF:*CENTRAL-REGISTRY* directory or load the file into
your running Lisp with (load "protobuf.asd").


5. Compile and load the protobuf code:

    (asdf:operate 'asdf:load-op 'protobuf)


6. Run the tests:

    (varint::test)
    (proto-lisp-test::test)
    (wire-format-test::test)
    (message-test::test)


BUGS
====

Please report bugs and send suggestions to protobuf-devel@common-lisp.net or
contact me directly.  My email is robert.brown at the mail hosting site
gmail.com.
